# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Poetry
poetry.lock # Generally, you DO want to commit poetry.lock.
            # However, if multiple people work on library code without strict coordination
            # OR if it's an application deployed in various envs, some teams choose to ignore it.
            # For libraries intended for PyPI, committing poetry.lock is recommended for reproducibility
            # of the dev environment and for tools like dependabot.
            # If you *choose* to ignore it after consideration, uncomment the line below.
# poetry.lock
.venv/               # Poetry's default virtual environment location (if created in project)
.poetry-env/         # Older Poetry virtualenv location

# PyInstaller
# Usually PyInstaller files are created in a separate output folder.
# If you use PyInstaller directly in your repo, uncomment and customize:
# *.manifest
# *.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
# *.log
# local_settings.py
# db.sqlite3
# db.sqlite3-journal

# Flask stuff:
# instance/
# .webassets-cache

# Scrapy stuff:
# .scrapy

# Sphinx documentation
docs/_build/
docs/auto_examples/ # If generated by sphinx-gallery

# Jupyter Notebook
.ipynb_checkpoints
jupyter_notebook_config.py

# IPython
profile_default/
ipython_config.py

# IDEs and editors
.idea/                   # JetBrains (PyCharm, IntelliJ)
.vscode/                 # Visual Studio Code (except for recommended settings, see below)
*.swp
*.swo
*~
.DS_Store                # macOS
Thumbs.db                # Windows
Desktop.ini              # Windows

# VS Code - Keep shared settings, ignore user-specific or workspace state
# .vscode/*
# !.vscode/settings.json
# !.vscode/tasks.json
# !.vscode/launch.json
# !.vscode/extensions.json
# *.code-workspace

# pyenv
# .python-version

# mypy
.mypy_cache/

# Ruff
.ruff_cache/

# Environments
.env
.env.*
!.env.example # Often good to commit an example env file

# Secrets
secrets.py
secrets.yml
*.pem
*.key
credentials*

# Data files / Large models (if not tracked by Git LFS and you handle them separately)
# Consider Git LFS for versioning large files if they *must* be in the repo.
# Otherwise, list directories or file patterns for data/models you download separately.
# *.h5
# *.pth
# *.onnx
# data/raw_images/
# models/downloaded_models/

# OS specific
.Spotlight-V100
.Trashes
ehthumbs.db